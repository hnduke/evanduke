name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies
      run: poetry install

    - name: Run isort
      run: poetry run isort .

    - name: Run black
      run: poetry run black --check .

    - name: Run flake8
      run: poetry run flake8

    - name: Setup Database
      run: PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE test_db;"

    - name: Set up environment
      run: |
        echo "SECRET_KEY=$(poetry run python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())')" >> $GITHUB_ENV
        echo "DATABASE_HOST=localhost" >> $GITHUB_ENV
        echo "DATABASE_PORT=5432" >> $GITHUB_ENV
        echo "DATABASE_NAME=test_db" >> $GITHUB_ENV
        echo "DATABASE_USER=postgres" >> $GITHUB_ENV
        echo "DATABASE_PASSWORD=postgres" >> $GITHUB_ENV

    - name: Run Tests
      run: poetry run pytest --cov=enterprises --cov-fail-under=90
